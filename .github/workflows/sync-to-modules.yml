name: Sync Shared Files to Modules

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      REPOSITORIES: |
        HalcyonOps/Ceyx-AWS-EC2
        HalcyonOps/Ceyx-AWS-S3Bucket
        HalcyonOps/Ceyx-AWS-VPC
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Sync Shared Files
        id: sync
        uses: varunsridharan/action-github-workflow-sync@3.4
        with:
          GITHUB_TOKEN: ${{ secrets.CEYX_SHARED_TOKEN }}
          REPOSITORIES: ${{ env.REPOSITORIES }}
          WORKFLOW_FILES: |
            resources/modules/.pre-commit-config.yaml=../../.pre-commit-config.yaml
            resources/shared/CODE_OF_CONDUCT.md=../../CODE_OF_CONDUCT.md
            resources/shared/CONTRIBUTING.md=../../CONTRIBUTING.md
            resources/shared/LICENSE=../../LICENSE
            resources/shared/SECURITY.md=../../SECURITY.md
            resources/workflows/security-scan.yml=security-scan.yml
            resources/workflows/terraform-ci.yml=terraform-ci.yml
            resources/workflows/terraform-tests.yml=terraform-tests.yml
          WORKFLOW_FILES_DIR: .
          PULL_REQUEST: true
          COMMIT_MESSAGE: "Sync shared files from source repository"

      - name: Enable Auto-Merge for PRs
        run: |
          # Read the REPOSITORIES environment variable into an array
          IFS=$'\n' read -r -a repos <<< "$REPOSITORIES"

          # Iterate over each repository
          for repo in "${repos[@]}"; do
            # Attempt to retrieve the pull request number
            pr_number=$(gh pr list --repo "$repo" --author "R055LE" --state open --json number --jq '.[0].number' 2>/dev/null)
            
            # Check if a pull request number was found
            if [ -n "$pr_number" ]; then
              echo "Processing PR #$pr_number for repository $repo"
              
              # Enable auto-merge for the PR
              if ! gh pr merge --auto --squash "$pr_number" --repo "$repo"; then
                echo "Failed to enable auto-merge for PR #$pr_number in $repo"
                continue
              fi
              
              # Wait for the PR to be merged
              while true; do
                pr_state=$(gh pr view "$pr_number" --repo "$repo" --json state --jq '.state' 2>/dev/null)
                if [ "$pr_state" == "MERGED" ]; then
                  echo "PR #$pr_number in $repo has been merged."
                  break
                else
                  echo "Waiting for PR #$pr_number in $repo to merge..."
                  sleep 5
                fi
              done
              
              # Retrieve the branch name associated with the PR
              branch_name=$(gh pr view "$pr_number" --repo "$repo" --json headRefName --jq '.headRefName' 2>/dev/null)
              if [ -z "$branch_name" ]; then
                echo "Failed to retrieve branch name for PR #$pr_number in $repo"
                continue
              fi
              
              # Delete the branch after merging
              if ! gh api -X DELETE "repos/$repo/git/refs/heads/$branch_name"; then
                echo "Failed to delete branch $branch_name in $repo"
                continue
              fi
              
            else
              echo "No open pull request found for $repo"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.CEYX_SHARED_TOKEN }}
          REPOSITORIES: ${{ env.REPOSITORIES }}
