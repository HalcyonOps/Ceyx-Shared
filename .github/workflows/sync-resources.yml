name: Sync Shared Resources

on:
  push:
    paths:
      - 'resources/**'
      - 'repositories.yml'
  workflow_dispatch:

jobs:
  sync-resources:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Ensure `write` access to contents for pushing changes

    env:
      DEFAULT_BRANCH: main
      TEMP_REPO_DIR: temp_repo

    steps:
      - name: Checkout Central Repository
        uses: actions/checkout@v4  # No need for versioning details unless specified

      - name: Setup Required Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y git jq openssl
          wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
        shell: bash

      - name: Parse Target Repositories
        id: get_repos
        run: |
          REPOS=$(yq '.repositories | map(.name + " " + .owner + " " + .path) | join(",")' repositories.yml)
          echo "REPOS=${REPOS}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Sync to Target Repositories
        if: steps.get_repos.outputs.REPOS != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically provided GitHub token
          REPOS: ${{ steps.get_repos.outputs.REPOS }}
          TEMP_REPO_DIR: ${{ env.TEMP_REPO_DIR }}
        run: |
          IFS=',' read -ra REPO_ARRAY <<< "$REPOS"
          for repo in "${REPO_ARRAY[@]}"; do
            IFS=' ' read -r REPO_NAME REPO_OWNER RESOURCE_PATH <<< "$repo"
            echo "Syncing to $REPO_OWNER/$REPO_NAME"

            # Use GITHUB_TOKEN for authentication
            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO_OWNER}/${REPO_NAME}.git $TEMP_REPO_DIR
            cd $TEMP_REPO_DIR
            git checkout $DEFAULT_BRANCH

            cp -R ../resources/* ./
            git add .

            if ! git diff --cached --quiet; then
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git commit -m "chore: update shared resources from central repository"
              git push origin $DEFAULT_BRANCH || exit 1
            else
              echo "No changes detected for $REPO_OWNER/$REPO_NAME. Skipping commit."
            fi

            cd ..
            rm -rf $TEMP_REPO_DIR
          done
        shell: bash
