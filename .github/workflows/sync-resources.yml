name: Sync Shared Resources

on:
  push:
    paths:
      - 'resources/**'
      - 'repositories.yml'
  workflow_dispatch:

jobs:
  sync-resources:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      GITHUB_APP_ID: ${{ secrets.CEYX_SHARED_RESOURCES_SYNC_APP_ID }}
      GITHUB_APP_PRIVATE_KEY: ${{ secrets.CEYX_SHARED_RESOURCES_SYNC_APP_PRIVATE_KEY }}
      DEFAULT_BRANCH: main
      TEMP_REPO_DIR: temp_repo

    steps:
      - name: Checkout Central Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Required Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y git jq openssl
          wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
        shell: bash

      - name: Generate GitHub App Token
        id: generate-token
        run: |
          echo "${GITHUB_APP_PRIVATE_KEY}" > private-key.pem
      
          # Generate JWT
          JWT=$(echo -n "{\"iat\":$(date +%s),\"exp\":$(( $(date +%s) + 600 )),\"iss\":${GITHUB_APP_ID}}" | \
                openssl dgst -sha256 -sign private-key.pem | \
                openssl base64 -A | tr '+/' '-_' | tr -d '=')
      
          # Fetch Installation ID
          INSTALLATIONS_RESPONSE=$(curl -s -H "Authorization: Bearer $JWT" \
                                           -H "Accept: application/vnd.github.v3+json" \
                                           https://api.github.com/app/installations)
          echo "Installation response: $INSTALLATIONS_RESPONSE"
      
          INSTALLATION_ID=$(echo "$INSTALLATIONS_RESPONSE" | jq -r 'if type == "array" then .[0].id else .id end')
      
          if [ -z "$INSTALLATION_ID" ]; then
              echo "Error: Could not retrieve installation ID."
              exit 1
          fi
      
          # Request Installation Token
          INSTALLATION_TOKEN=$(curl -s -X POST -H "Authorization: Bearer $JWT" \
                                        -H "Accept: application/vnd.github.v3+json" \
                                        https://api.github.com/app/installations/${INSTALLATION_ID}/access_tokens | jq -r '.token')
      
          if [ -z "$INSTALLATION_TOKEN" ]; then
              echo "Error: Failed to retrieve the installation token."
              exit 1
          fi
      
          echo "token=${INSTALLATION_TOKEN}" >> $GITHUB_OUTPUT
        shell: bash
        env:
          GITHUB_APP_ID: ${{ secrets.CEYX_SHARED_RESOURCES_SYNC_APP_ID }}
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.CEYX_SHARED_RESOURCES_SYNC_APP_PRIVATE_KEY }}
      

      - name: Parse Target Repositories
        id: get_repos
        run: |
          REPOS=$(yq '.repositories | map(.name + " " + .owner + " " + .path) | join(",")' repositories.yml)
          echo "REPOS=${REPOS}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Sync to Target Repositories
        if: steps.get_repos.outputs.REPOS != ''
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          REPOS: ${{ steps.get_repos.outputs.REPOS }}
          TEMP_REPO_DIR: ${{ env.TEMP_REPO_DIR }}
        run: |
          IFS=',' read -ra REPO_ARRAY <<< "$REPOS"
          for repo in "${REPO_ARRAY[@]}"; do
            IFS=' ' read -r REPO_NAME REPO_OWNER RESOURCE_PATH <<< "$repo"
            echo "Syncing to $REPO_OWNER/$REPO_NAME"

            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO_OWNER}/${REPO_NAME}.git $TEMP_REPO_DIR
            cd $TEMP_REPO_DIR
            git checkout $DEFAULT_BRANCH

            cp -R ../resources/* ./
            git add .

            if ! git diff --cached --quiet; then
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git commit -m "chore: update shared resources from central repository"
              git push origin $DEFAULT_BRANCH || exit 1
            else
              echo "No changes detected for $REPO_OWNER/$REPO_NAME. Skipping commit."
            fi

            cd ..
            rm -rf $TEMP_REPO_DIR
          done
        shell: bash
